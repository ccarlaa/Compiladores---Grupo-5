name: Release - BinÃ¡rios Multiplataforma

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-release:
    name: Build para ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            name: Windows
            executable: compilador.exe
            artifact: tradutor-windows
          - os: ubuntu-latest
            name: Linux
            executable: compilador
            artifact: tradutor-linux
          - os: macos-latest
            name: macOS
            executable: compilador
            artifact: tradutor-macos
    
    steps:
    - name: Checkout do cÃ³digo
      uses: actions/checkout@v4
      
    - name: Setup MinGW (Windows)
      if: matrix.os == 'windows-latest'
      uses: egor-tensin/setup-mingw@v2
      with:
        platform: x64
        
    - name: Instalar dependÃªncias (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt update && sudo apt install -y build-essential
      
    - name: Verificar ferramentas
      run: gcc --version
      
    - name: Compilar projeto
      run: |
        gcc -std=c99 -Wall -Wextra -DMANUAL_MODE -O2 -s -o ${{ matrix.executable }} src/main.c
      shell: bash
      
    - name: Testar executÃ¡vel
      run: |
        if [ -f "${{ matrix.executable }}" ]; then
          echo "âœ“ ExecutÃ¡vel criado: ${{ matrix.executable }}"
          ./${{ matrix.executable }} tests/test_01_basic.c > test_output.txt
          echo "âœ“ Teste bÃ¡sico executado"
        else
          echo "âœ— Falha na criaÃ§Ã£o do executÃ¡vel"
          exit 1
        fi
      shell: bash
      
    - name: Criar pacote
      run: |
        mkdir -p release
        cp ${{ matrix.executable }} release/
        cp README.md release/
        cp -r tests release/
        
        # Criar arquivo de informaÃ§Ãµes
        echo "Tradutor C para Portugol - ${{ matrix.name }}" > release/INFO.txt
        echo "VersÃ£o: ${{ github.ref_name }}" >> release/INFO.txt
        echo "Build: $(date)" >> release/INFO.txt
        echo "Sistema: ${{ matrix.name }}" >> release/INFO.txt
        echo "" >> release/INFO.txt
        echo "Para usar:" >> release/INFO.txt
        echo "  ./${{ matrix.executable }} arquivo.c" >> release/INFO.txt
        echo "  ./${{ matrix.executable }} arquivo.c -o saida.ptg" >> release/INFO.txt
      shell: bash
      
    - name: Upload do artefato
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: release/
        retention-days: 90

  create-release:
    needs: build-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout do cÃ³digo
      uses: actions/checkout@v4
      
    - name: Download todos os artefatos
      uses: actions/download-artifact@v4
      
    - name: Criar arquivos ZIP
      run: |
        zip -r tradutor-windows.zip tradutor-windows/
        tar -czf tradutor-linux.tar.gz tradutor-linux/
        tar -czf tradutor-macos.tar.gz tradutor-macos/
        
    - name: Criar release
      uses: softprops/action-gh-release@v1
      with:
        name: "Tradutor C para Portugol ${{ github.ref_name }}"
        body: |
          ## ðŸŽ‰ Nova versÃ£o do Tradutor C para Portugol
          
          Esta release inclui binÃ¡rios compilados para Windows, Linux e macOS.
          
          ### ðŸ“¦ Downloads DisponÃ­veis
          - **Windows**: `tradutor-windows.zip`
          - **Linux**: `tradutor-linux.tar.gz` 
          - **macOS**: `tradutor-macos.tar.gz`
          
          ### ðŸš€ Como usar
          1. Baixe o arquivo para seu sistema operacional
          2. Extraia o arquivo
          3. Execute: `./compilador arquivo.c` (Linux/Mac) ou `compilador.exe arquivo.c` (Windows)
          
          ### âœ¨ Funcionalidades
          - TraduÃ§Ã£o de cÃ³digo C para Portugol
          - Suporte multiplataforma  
          - Modo standalone (sem dependÃªncias)
          - Suite completa de testes incluÃ­da
          
          ### ðŸ§ª Testes
          Todos os builds passaram nos testes automatizados em:
          - âœ… Windows (MinGW)
          - âœ… Linux (GCC)
          - âœ… macOS (Clang)
          
        files: |
          tradutor-windows.zip
          tradutor-linux.tar.gz
          tradutor-macos.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
